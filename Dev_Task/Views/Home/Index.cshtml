 <form name="userForm" class="form">
     <div class="row">
            <div class="form-group col-md-1">
                <label for="id">Id:</label>
                <input class="form-control" name="id" />
            </div>

            <div class="form-group col-md-2">
                <label for="name">Name:</label>
                <input class="form-control" name="name" />
            </div>

            <div class="col-md-2">
                <label  for="type">Type:</label>
                <select name="type" class="form-control"> 
                <option value="0">Children</option>
                <option value="1">Adults</option>
                </select>
            </div> 
     </div>
     <div class="row">
            <div class="form-group col-md-2">
                <label for="author">Author:</label>
                <input class="form-control" name="author"/>
            </div>

             <div class="form-group col-md-3">
                <label for="genre">Genre:</label>
                <input class="form-control" name="genre"/>
            </div>            
    </div>
    <div class="row">
            <div class="form-group col-md-2">
                <label for="numberOfPages">Number of pages:</label>
                <input class="form-control" name="numberOfPages"/>
            </div>
            <div class="form-group col-md-3">
                <label for="description">Description:</label>
                <input class="form-control" name="description"/>
            </div>
    </div>

            <div class="panel-body col-md-2">
                <button type="submit" id="submit" class="btn btn-primary btn-lg btn-block">Save</button>
            </div>
    
        </form>

<table class="table table-condensed table-striped  col-md-6">
    <thead><tr><th>#</th><th>Name</th><th>Type</th><th>Author</th><th>Genre</th><th>Pages</th><th>Description</th></tr></thead>
    <tbody>
    </tbody>
    </table>

  
<script>


     $.ajax({
         url: '/Home/BookSearch',
        type: 'Post',
        dataType: 'json',
        success: function (books) {
            let rows = document.querySelector("tbody"); 
            books.forEach(book => {
                rows.append(row(book));
                });
            console.log(books);
        },
        error: function (error) {
            alert(error);
                       }
    });

      function row(book) {
 
            const tr = document.createElement("tr");
            tr.setAttribute("data-rowid", book.Id);
 
            const idTd = document.createElement("td");
            idTd.append(book.Id);
            tr.append(idTd);
 
            const nameTd = document.createElement("td");
            nameTd.append(book.Name);
            tr.append(nameTd);

            const typeTd = document.createElement("td");
            if(book.ReaderType == 0)
                typeTd.append("Children");
            else
                typeTd.append("Adults");
            tr.append(typeTd);

            const authorTd = document.createElement("td");
            authorTd.append(book.Author);
            tr.append(authorTd);

            const genreTd = document.createElement("td");
            genreTd.append(book.Genre);
            tr.append(genreTd);

            const pageTd = document.createElement("td");
            pageTd.append(book.NumberOfPages);
            tr.append(pageTd);

            const descriptionTd = document.createElement("td");
            descriptionTd.append(book.Description);
            tr.append(descriptionTd);

            const linksTd = document.createElement("td");
            
       
            const removeLink = document.createElement("a");
            removeLink.setAttribute("data-id", book.Id);
            removeLink.setAttribute("style", "cursor:pointer;padding:15px;");
            removeLink.setAttribute("class", "delete btn btn-danger");
            removeLink.append("Delete");
            removeLink.addEventListener("click", e => {
 
                e.preventDefault();
                document.querySelector("tr[data-rowid='" + book.Id + "']").remove()
               
                addElement(book.Id);
            });
            linksTd.append(removeLink);
            tr.appendChild(linksTd);
            return tr;
        }

        function syncDelete(id)
        {
            id.forEach(enement => DeleteBook(enement)); 
        }

        var remove = [];
        function addElement(id){
            remove.push(id);
        }

        function syncAdd(id)
        {       
            id.forEach(enement =>CreateBook(enement));                
        }

        var plus = [];
        function plusElement(el){
            plus.push(el); 
        }

        document.forms["userForm"].addEventListener("submit", e => {
            e.preventDefault();
            var book = new Object(); 
            const form = document.forms["userForm"];
            book.Id = form.elements["id"].value;
            book.Name = form.elements["name"].value;
            book.ReaderType = form.elements["type"].value;
            book.Author = form.elements["author"].value;
            book.Genre = form.elements["genre"].value;
            book.NumberOfPages = form.elements["numberOfPages"].value;
            book.Description = form.elements["description"].value;
            document.querySelector("tbody").append(row(book));

            plusElement(book);
            
            $('form')[0].reset(); 
        });

    function syn(){
        setTimeout(() => syncAdd(plus), 1000);
        setTimeout(() => syncDelete(remove), 1000);
        alert("The data is sent to the server");
    }
        async function CreateBook(book) {
 
            const response = await fetch("https://localhost:44393/Home/BookAdd", {
                method: "Post",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({
                    Id: book.Id,
                    Name: book.Name,
                    ReaderType: book.ReaderType,
                    Author: book.Author,
                    Genre: book.Genre,
                    NumberOfPages: book.NumberOfPages,
                    Description: book.Description
                })
            });
        }
        async function DeleteBook(id) {
            const response = await fetch("https://localhost:44393/Home/BookDel", {
                method: "Post",
                headers: { "Accept": "application/json", "Content-Type": "application/json"  },
                body: JSON.stringify({
                    Id: id
                })
            });
        }   
       
</script>


